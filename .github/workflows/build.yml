name: Build

on:
  workflow_dispatch: 
  push:
    branches: [ main ]
    paths: 
      - "**.rs"
      - "cargo.toml"
      - ".github/workflows/build.yml"
  pull_request:
    branches: [ main ]
    paths: 
      - "**.rs"
      - "cargo.toml"
      - ".github/workflows/build.yml"

env:
  RELEASE_BIN: samp_crypto

jobs:
  build:
    name: Build release

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        build: [linux, windows]
        include:
          - build: linux
            os: ubuntu-20.04
            rust: stable-i686
          - build: windows
            os: windows-latest
            rust: stable-i686
    steps:
      - uses: actions/checkout@v4

      - name: Install gcc-multilib
        run: |
          sudo apt update
          sudo apt install gcc-multilib -y
        if: matrix.os == 'ubuntu-20.04'

      - name: Install Rust (rustup)
        run: rustup update ${{ matrix.rust }} --no-self-update && rustup default ${{ matrix.rust }}
        shell: bash

      - name: Build
        run: cargo build --release

      - name: Create artifact directory
        shell: bash
        run: |
          mkdir artifacts
          cd artifacts
          mkdir plugins
          mkdir -p qawno/include
          mkdir -p pawno/include
  
      - name: Rename Linux binary
        run: mv ./target/release/lib${{ env.RELEASE_BIN }}.so ./target/release/${{ env.RELEASE_BIN }}.so
        if: matrix.os == 'ubuntu-20.04'

      - name: Move files
        run: |
          mv ./target/release/${{ env.RELEASE_BIN }}.so ./artifacts/plugins/
          cp ./include/* ./artifacts/qawno/include/
          cp ./include/* ./artifacts/pawno/include/

      - uses: actions/upload-artifact@v4
        name: Upload archive
        with:
          name: samp-crypto-${{ runner.os }}
          path: artifacts/
